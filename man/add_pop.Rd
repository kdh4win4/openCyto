% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/add_pop.R
\name{add_pop}
\alias{add_pop}
\title{apply a gating method to the \code{GatingSet}}
\usage{
add_pop(gs, alias = "*", pop = "A+", parent, dims = NA, gating_method,
  gating_args = NA, collapseDataForGating = NA, groupBy = NA,
  preprocessing_method = NA, preprocessing_args = NA, ...)
}
\arguments{
\item{gs}{GatingSet or GatingSetList}

\item{alias,pop,parent,dims,gating_method,gating_args,collapseDataForGating,groupBy,preprocessing_method,preprocessing_args}{see details in \link[openCyto:gatingTemplate-class]{gatingTemplate}}

\item{...}{other arguments
\itemize{
     \item{mc.cores}{ passed to \code{multicore} package for parallel computing}
     \item{parallel_type}{  \code{character} specifying the parallel type. The valid options are "none", "multicore", "cluster".}
     \item{cl}{ \code{cluster} object passed to \code{parallel} package (when \code{parallel_type} is "cluster")}
     }}
}
\description{
When interacting with the existing gated data, this function provides the alternative way to interact with he GatingSet
by supplying the gating description directly through arguments without the need to write the compelete
csv gating template.
}
\examples{
\dontrun{
 # add quad gates
 add_pop(gs, gating_method = "mindensity", dims = "CCR7,CD45RA", parent = "cd4-cd8+", pop = "CCR7+/-CD45RA+/-")

# polyfunctional gates (boolean combinations of exsiting marginal gates)
add_pop(gs, gating_method = "polyFunctions", parent = "cd8", gating_args = "cd8/IFNg:cd8/IL2:cd8/TNFa")

#boolGate method
add_pop(gs, alias = "IL2orIFNg", gating_method = "boolGate", parent = "cd4", gating_args = "cd4/IL2|cd4/IFNg")
}
}

